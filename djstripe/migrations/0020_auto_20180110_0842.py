# Generated by Django 2.0.1 on 2018-01-10 06:42

from django.db import migrations, models
import django.db.models.deletion
import djstripe.enums
import djstripe.fields


class Migration(migrations.Migration):

    dependencies = [
        ('djstripe', '0019_auto_20180110_0616'),
    ]

    operations = [
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('djstripe_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_id', djstripe.fields.StripeIdField(max_length=255, unique=True)),
                ('livemode', djstripe.fields.StripeNullBooleanField(default=None, help_text='Null here indicates that the livemode status is unknown or was previously unrecorded. Otherwise, this field indicates whether this record comes from Stripe test mode or live mode operation.')),
                ('created', djstripe.fields.StripeDateTimeField(help_text='The datetime this object was created in stripe.', null=True)),
                ('metadata', djstripe.fields.StripeJSONField(blank=True, help_text='A set of key/value pairs that you can attach to an object. It can be useful for storing additional information about an object in a structured format.', null=True)),
                ('description', djstripe.fields.StripeTextField(blank=True, help_text='A description of this object.', null=True)),
                ('djstripe_created', models.DateTimeField(auto_now_add=True)),
                ('djstripe_updated', models.DateTimeField(auto_now=True)),
                ('account_holder_name', djstripe.fields.StripeCharField(help_text='The name of the person or business that owns the bank account.', max_length=5000, null=True)),
                ('account_holder_type', djstripe.fields.StripeCharField(choices=[('company', 'Company'), ('individual', 'Individual')], help_text='The type of entity that holds the account.', max_length=10)),
                ('bank_name', djstripe.fields.StripeCharField(help_text='Name of the bank associated with the routing number (e.g., `WELLS FARGO`).', max_length=255)),
                ('country', djstripe.fields.StripeCharField(help_text='Two-letter ISO code representing the country the bank account is located in.', max_length=2)),
                ('currency', djstripe.fields.StripeCharField(help_text='Three-letter ISO currency code', max_length=3)),
                ('default_for_currency', djstripe.fields.StripeNullBooleanField(help_text='Whether this external account is the default account for its currency.')),
                ('fingerprint', djstripe.fields.StripeCharField(help_text='Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.', max_length=16)),
                ('last4', djstripe.fields.StripeCharField(max_length=4)),
                ('routing_number', djstripe.fields.StripeCharField(help_text='The routing transit number for the bank account.', max_length=255)),
                ('status', djstripe.fields.StripeCharField(choices=[('errored', 'Errored'), ('new', 'New'), ('validated', 'Validated'), ('verification_failed', 'Verification failed'), ('verified', 'Verified')], max_length=19)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RenameField(
            model_name='account',
            old_name='id',
            new_name='djstripe_id',
        ),
        migrations.RenameField(
            model_name='card',
            old_name='id',
            new_name='djstripe_id',
        ),
        migrations.RenameField(
            model_name='charge',
            old_name='id',
            new_name='djstripe_id',
        ),
        migrations.RenameField(
            model_name='coupon',
            old_name='id',
            new_name='djstripe_id',
        ),
        migrations.RenameField(
            model_name='customer',
            old_name='id',
            new_name='djstripe_id',
        ),
        migrations.RenameField(
            model_name='dispute',
            old_name='id',
            new_name='djstripe_id',
        ),
        migrations.RenameField(
            model_name='event',
            old_name='id',
            new_name='djstripe_id',
        ),
        migrations.RenameField(
            model_name='invoice',
            old_name='id',
            new_name='djstripe_id',
        ),
        migrations.RenameField(
            model_name='invoiceitem',
            old_name='id',
            new_name='djstripe_id',
        ),
        migrations.RenameField(
            model_name='payout',
            old_name='id',
            new_name='djstripe_id',
        ),
        migrations.RenameField(
            model_name='plan',
            old_name='id',
            new_name='djstripe_id',
        ),
        migrations.RenameField(
            model_name='source',
            old_name='id',
            new_name='djstripe_id',
        ),
        migrations.RenameField(
            model_name='subscription',
            old_name='id',
            new_name='djstripe_id',
        ),
        migrations.RenameField(
            model_name='transfer',
            old_name='id',
            new_name='djstripe_id',
        ),
        migrations.RemoveField(
            model_name='transfer',
            name='adjustment_count',
        ),
        migrations.RemoveField(
            model_name='transfer',
            name='adjustment_fees',
        ),
        migrations.RemoveField(
            model_name='transfer',
            name='adjustment_gross',
        ),
        migrations.RemoveField(
            model_name='transfer',
            name='charge_count',
        ),
        migrations.RemoveField(
            model_name='transfer',
            name='charge_fees',
        ),
        migrations.RemoveField(
            model_name='transfer',
            name='charge_gross',
        ),
        migrations.RemoveField(
            model_name='transfer',
            name='collected_fee_count',
        ),
        migrations.RemoveField(
            model_name='transfer',
            name='collected_fee_gross',
        ),
        migrations.RemoveField(
            model_name='transfer',
            name='net',
        ),
        migrations.RemoveField(
            model_name='transfer',
            name='refund_count',
        ),
        migrations.RemoveField(
            model_name='transfer',
            name='refund_fees',
        ),
        migrations.RemoveField(
            model_name='transfer',
            name='refund_gross',
        ),
        migrations.RemoveField(
            model_name='transfer',
            name='validation_count',
        ),
        migrations.RemoveField(
            model_name='transfer',
            name='validation_fees',
        ),
        migrations.AddField(
            model_name='charge',
            name='transfer_group',
            field=djstripe.fields.StripeCharField(blank=True, help_text='A string that identifies this transaction as part of a group.', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='invoiceitem',
            name='period',
            field=djstripe.fields.StripeJSONField(default={}),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='transfer',
            name='transfer_group',
            field=djstripe.fields.StripeCharField(blank=True, help_text='A string that identifies this transaction as part of a group.', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='bankaccount',
            name='account',
            field=models.ForeignKey(help_text='The account the charge was made on behalf of. Null here indicates that this value was never set.', on_delete=django.db.models.deletion.PROTECT, related_name='bank_account', to='djstripe.Account'),
        ),
        migrations.AddField(
            model_name='bankaccount',
            name='customer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bank_account', to='djstripe.Customer'),
        ),
        migrations.AddField(
            model_name='payout',
            name='destination',
            field=models.ForeignKey(help_text='ID of the bank account or card the payout was sent to.', null=True, on_delete=django.db.models.deletion.PROTECT, to='djstripe.BankAccount'),
        ),
    ]
