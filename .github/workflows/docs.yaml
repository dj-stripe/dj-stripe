name: Build and deploy docs

on:
  push:
    branches: [master]
  
  workflow_dispatch: # to trigger manually

env:
  POETRY_VERSION: 1.1.11

jobs:

  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
          python-version: ${{ matrix.python-version }}

    # to keep poetry setup as generic as possible
    - name: Get full Python version
      id: full-python-version
      run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

    - name: Install poetry (${{ env.POETRY_VERSION }}) binary on runner
      run: |
        curl -sL https://install.python-poetry.org | python - --version ${{ env.POETRY_VERSION }}

    - name: Configure poetry
      run: poetry config virtualenvs.in-project true

    - name: Set up cache
      uses: actions/cache@v2
      id: cache
      with:
        path: .venv
        key: venv-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Ensure cache is healthy
      if: steps.cache.outputs.cache-hit == 'true'
      run: timeout 10s poetry run pip --version || rm -rf .venv

    - name: Install dependencies
      run: poetry install -E docs

    - name: Deploy docs to Github Pages
      run: poetry run mkdocs gh-deploy --force